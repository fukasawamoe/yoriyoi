<%= javascript_import_module_tag "custom/text_animation" %>
<section>
  <div class="container mx-auto">
    <div class="text-center">
      <div class="w-full mx-auto m-10 md:w-2/3" style="background: #ffe6e8; padding: 20px; border: 2px dashed #ffb6c1; box-shadow: 0 0 0 5px #ffe6e8; -moz-box-shadow: 0 0 0 5px #ffe6e8; -webkit-box-shadow: 0 0 0 5px #ffe6e8; font-size: 100%;">
        <div id="textbox" class="text-sm md:text-lg lg:text-xl">
          <div>はじめまして ! 登録してくれてありがとにゃ〜！</div>
          <div>これから一緒にがんばるにゃ</div>
          <div class="whitespace-pre-wrap lg:whitespace-normal">まずは、キミがなりたい理想のジブンを
          教えてほしいにゃ！</div>
        </div>
        <div class="justify-center">
        <%= form_with model: @goal, url: goal_path, local: true do |f| %>
          <%= f.text_field :ideal_self, placeholder: "例 : 今の体重から5キロ痩せたい...など", class: 'rounded w-full text-center mt-10 sm:w-3/4' %>
          <div class="p-5 flex flex-col sm:flex-row justify-center items-center">
            <%= button_tag(type:'submit', class:"whitespace-nowrap bg-blue-400 py-2 px-5 w-auto rounded-lg text-white m-2") do %>
              <i class="fa-solid fa-check"></i> 登録
            <% end %>
          </div>
        <% end %>
        <%= button_to raw('<i class="fa-solid fa-angles-right"></i> あとで設定する'), skip_goal_path, class:"whitespace-nowrap bg-blue-400 py-2 px-5 w-auto rounded-lg text-white m-2" %>
      </div>
    </div>
  </div>
</section>
<script>
document.addEventListener("turbo:load", function() {
  let element = document.getElementById('textbox');
  if (element === null) {
    console.error("Element with id 'textbox' not found");
  } else {
    let textNodes = [];
    let originalTexts = [];
    let i = 0;

    // テキストノードを取得する関数
    function getTextNodes(node) {
      if (node !== null && node.nodeType === Node.TEXT_NODE) {
        textNodes.push(node);
        originalTexts.push(node.nodeValue);
        node.nodeValue = ''; // テキストを非表示にする
      } else {
        for (let child of node.childNodes) {
          getTextNodes(child);
        }
      }
    }

    // テキストノードを一文字ずつ表示する関数
    function typeWriter() {
      if (i < textNodes.length) {
        let text = originalTexts[i];
        let j = 0;
        let intervalId = setInterval(function() {
          if (j < text.length) {
            textNodes[i].nodeValue += text.charAt(j);
            j++;
          } else {
            clearInterval(intervalId);
            i++;
            typeWriter();
          }
        }, 50); // 100ミリ秒ごとに文字を表示
      }
    }

    // テキストノードを取得してタイピングを開始
    getTextNodes(element);
    typeWriter();
  }
});
</script>